# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: chmod -R a+x scripts
      displayName: before_script

    - bash: echo Branch Name is $(Build.ArtifactStagingDirectory) $(Build.SourceBranchName)  docker user :$(DOCKER_USERNAME) docker pass:$(DOCKER_PASSWORD)
      displayName: Branch Name 

    - bash: ./scripts/dotnet-build.sh
      displayName: run_build_script

    - bash: ./scripts/dotnet-test.sh
      displayName: run_test_script

    - bash: ./scripts/dotnet-publish.sh
      displayName: run_dotnet-publish_script
      # workingDirectory: $(Build.SourcesDirectory)

    - bash: ./scripts/docker-publish-pipelines-azure-devops.sh
      env:
        Build_SourceBranchName: $(Build.SourceBranchName)
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
      displayName: run_docker-publish-pipelines-azure-devops_script

    # - task: Docker@2
    #   displayName: Build and Push Fibon.Api image
    #   inputs:
    #     repository: 'fibon-api'
    #     containerRegistry: 'my-docker-hub'
    #     command: buildAndPush
    #     Dockerfile: src/Fibon.Api/Dockerfile.production
    #     tags: |
    #      latest
    # - task: Docker@2
    #   displayName: Build and Push Fibon.Service image
    #   inputs:
    #     repository: 'fibon-service'
    #     containerRegistry: 'my-docker-hub'
    #     command: buildAndPush
    #     Dockerfile: ./src/Fibon.Service/Dockerfile.production
    #     tags: |
    #       latest

    - bash: ./scripts/after-success.sh
      displayName: run_after-success_script